"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.chainable = exports.reporting = void 0;
const ChainableValidator_1 = require("./combined-validators/ChainableValidator");
const ReportingValidator_1 = require("./combined-validators/ReportingValidator");
const ThrowingValidator_1 = require("./combined-validators/ThrowingValidator");
/**
 * The reporting validator does not throw on failed validation, but returns a ValidationReport which holds the result.
 */
exports.reporting = ReportingValidator_1.reportingValidator;
/**
 * The chainable validator can always returns itself, so you can chain validation methods.
 *
 * @param {boolean} [throwOnFailure=false] - Whether the validator should throw directly on failed validation.
 * @returns {ChainableValidator} The created chainable validator.
 */
const chainable = (throwOnFailure = false) => new ChainableValidator_1.ChainableValidator(throwOnFailure);
exports.chainable = chainable;
/**
 * The throwing validator throws directly on failed validation.
 */
exports.default = ThrowingValidator_1.throwingValidator;
