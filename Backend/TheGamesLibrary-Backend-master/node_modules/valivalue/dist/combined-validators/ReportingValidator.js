"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportingValidator = void 0;
const DefaultErrorFactory_1 = require("../errors/DefaultErrorFactory");
const ValidationReport_1 = require("../validation-result/ValidationReport");
const ValidationOptions_1 = require("../ValidationOptions");
const NumberValidator_1 = require("../validators/NumberValidator");
const ObjectValidator_1 = require("../validators/ObjectValidator");
const StringValidator_1 = require("../validators/StringValidator");
const TimestampValidator_1 = require("../validators/TimestampValidator");
const reportingObjectValidatorOptions = new ValidationOptions_1.ValidationOptions(DefaultErrorFactory_1.defaultErrorFactory, (0, ValidationReport_1.validationReportFactory)());
const reportingNumberValidatorOptions = new ValidationOptions_1.ValidationOptions(DefaultErrorFactory_1.defaultErrorFactory, (0, ValidationReport_1.validationReportFactory)());
const reportingStringValidatorOptions = new ValidationOptions_1.ValidationOptions(DefaultErrorFactory_1.defaultErrorFactory, (0, ValidationReport_1.validationReportFactory)());
const reportingTimestampValidatorOptions = new ValidationOptions_1.ValidationOptions(DefaultErrorFactory_1.defaultErrorFactory, (0, ValidationReport_1.validationReportFactory)());
/**
 * A collection of default reporting validators that will not throw errors automatically on validation failure, but will keep track of them in a ValidationReport.
 */
exports.reportingValidator = {
    objects: new ObjectValidator_1.ObjectValidator(reportingObjectValidatorOptions),
    strings: new StringValidator_1.StringValidator(reportingStringValidatorOptions),
    numbers: new NumberValidator_1.NumberValidator(reportingNumberValidatorOptions),
    timestamps: new TimestampValidator_1.TimestampValidator(reportingTimestampValidatorOptions)
};
